<?xml version="1.0" encoding="UTF-8"?>
<web-app version="2.4" xmlns="http://java.sun.com/xml/ns/j2ee"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://java.sun.com/xml/ns/j2ee http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd">
	<display-name>Pizza 73 Online Store</display-name>

	<!-- Context Configuration locations for Spring XML files -->
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>
      classpath*:META-INF/applicationContext.xml,/WEB-INF/applicationContext-resources.xml,/WEB-INF/security.xml
    </param-value>
	</context-param>

	<!-- Define the basename for a resource bundle for I18N -->
	<context-param>
		<param-name>javax.servlet.jsp.jstl.fmt.localizationContext</param-name>
		<param-value>ApplicationResources</param-value>
	</context-param>

	<listener>
		<listener-class>
			org.springframework.web.util.IntrospectorCleanupListener</listener-class>
	</listener>

	<listener>
		<listener-class>com.pizza73.webapp.listener.PartnersStartupListener</listener-class>
	</listener>

	<listener>
		<listener-class>
			org.springframework.web.context.request.RequestContextListener</listener-class>
	</listener>

	<servlet>
		<servlet-name>partners</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<load-on-startup>2</load-on-startup>
	</servlet>

	<servlet-mapping>
		<servlet-name>partners</servlet-name>
		<url-pattern>*.html</url-pattern>
	</servlet-mapping>

	<servlet-mapping>
		<servlet-name>partners</servlet-name>
		<url-pattern>/dwr/*</url-pattern>
	</servlet-mapping>

	<session-config>
		<session-timeout>240</session-timeout>
	</session-config>

	<filter>
		<filter-name>springSecurityFilterChain</filter-name>
		<filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>springSecurityFilterChain</filter-name>
		<url-pattern>*.html</url-pattern>
	</filter-mapping>
	<filter-mapping>
		<filter-name>springSecurityFilterChain</filter-name>
		<url-pattern>*.jsp</url-pattern>
	</filter-mapping>
	<filter-mapping>
		<filter-name>springSecurityFilterChain</filter-name>
		<url-pattern>*.pdf</url-pattern>
	</filter-mapping>
	<filter-mapping>
		<filter-name>springSecurityFilterChain</filter-name>
		<url-pattern>/dwr/*</url-pattern>
	</filter-mapping>


	<filter>
		<filter-name>sessionFilter</filter-name>
		<filter-class>
			org.springframework.orm.hibernate3.support.OpenSessionInViewFilter</filter-class>
	</filter>

	<filter-mapping>
		<filter-name>sessionFilter</filter-name>
		<url-pattern>*.html</url-pattern>
	</filter-mapping>

	<filter-mapping>
		<filter-name>sessionFilter</filter-name>
		<url-pattern>*.jsp</url-pattern>
	</filter-mapping>

	<filter-mapping>
		<filter-name>sessionFilter</filter-name>
		<url-pattern>/dwr/*</url-pattern>
	</filter-mapping>

	<filter>
		<filter-name>compressionFilter</filter-name>
		<filter-class>com.pizza73.webapp.base.filter.GZIPFilter</filter-class>
	</filter>

	<filter-mapping>
		<filter-name>compressionFilter</filter-name>
		<url-pattern>*.jsp</url-pattern>
	</filter-mapping>

	<filter-mapping>
		<filter-name>compressionFilter</filter-name>
		<url-pattern>*.html</url-pattern>
	</filter-mapping>

	<filter-mapping>
		<filter-name>compressionFilter</filter-name>
		<url-pattern>*.js</url-pattern>
	</filter-mapping>

	<filter-mapping>
		<filter-name>compressionFilter</filter-name>
		<url-pattern>*.css</url-pattern>
	</filter-mapping>

	<!--
		SECURITY FOR PIE ONLY BEGIN <resource-env-ref> <description> Link to
		the UserDatabase instance from which we request lists of defined role
		names. Typically, this will be connected to the global user database
		with a ResourceLink element in server.xml or the context configuration
		file for the web application. </description>
		<resource-env-ref-name>users</resource-env-ref-name>
		<resource-env-ref-type> org.apache.catalina.UserDatabase
		</resource-env-ref-type> </resource-env-ref> <security-constraint>
		<web-resource-collection> <web-resource-name>Authetication For
		Pie</web-resource-name> <url-pattern>/*</url-pattern>
		</web-resource-collection> <auth-constraint>
		<role-name>pie</role-name> </auth-constraint> </security-constraint>

		<login-config> <auth-method>BASIC</auth-method>
		<realm-name>Authetication For Pie</realm-name> </login-config>

		<security-role> <description> The role that is required to log in to
		the Manager Application </description> <role-name>pie</role-name>
		</security-role> SECURITY FOR PIE ONLY END
	-->
	<welcome-file-list>
		<welcome-file>index.jsp</welcome-file>
	</welcome-file-list>

	<error-page>
		<error-code>500</error-code>
		<location>/error.jsp</location>
	</error-page>
	<error-page>
		<error-code>400</error-code>
		<location>/index.jsp</location>
	</error-page>
	<error-page>
		<error-code>403</error-code>
		<location>/403.jsp</location>
	</error-page>
	<error-page>
		<error-code>404</error-code>
		<location>/404.jsp</location>
	</error-page>
	<!--
	<resource-ref>
        <description>Connection Pool</description>
        <res-ref-name>jdbc/LocalCheddar</res-ref-name>
        <res-type>javax.sql.Datasource</res-type>
        <res-auth>Container</res-auth>
    </resource-ref>
    -->
</web-app>
